define(function(require) {
    var transitionize = require("transitionize")
        , fastclick = require("fastclick").attach;

    var defaults = {
        color: "#64bd63",
        secondaryColor: "#dfdfdf",
        className: "switchery",
        disabled: false,
        disabledOpacity: .5,
        speed: "0.4s"
    };
    function Switchery(element, options) {
        if (!(this instanceof Switchery))
            return new Switchery(element,options);
        this.element = element;
        this.options = options || {};
        for (var i in defaults) {
            if (this.options[i] == null ) {
                this.options[i] = defaults[i]
            }
        }
        if (this.element != null && this.element.type == "checkbox")
            this.init()
    }
    Switchery.prototype.hide = function() {
        this.element.style.display = "none"
    }
    ;
    Switchery.prototype.show = function() {
        var switcher = this.create();
        this.insertAfter(this.element, switcher)
    }
    ;
    Switchery.prototype.create = function() {
        this.switcher = document.createElement("span");
        this.jack = document.createElement("small");
        this.switcher.appendChild(this.jack);
        this.switcher.className = this.options.className;
        return this.switcher
    }
    ;
    Switchery.prototype.insertAfter = function(reference, target) {
        reference.parentNode.insertBefore(target, reference.nextSibling)
    }
    ;
    Switchery.prototype.isChecked = function() {
        return this.element.checked
    }
    ;
    Switchery.prototype.isDisabled = function() {
        return this.options.disabled || this.element.disabled
    }
    ;
    Switchery.prototype.setPosition = function(clicked) {
        var checked = this.isChecked()
            , switcher = this.switcher
            , jack = this.jack;
        if (clicked && checked)
            checked = false;
        else if (clicked && !checked)
            checked = true;
        if (checked === true) {
            this.element.checked = true;
            if (window.getComputedStyle)
                jack.style.left = parseInt(window.getComputedStyle(switcher).width) - parseInt(window.getComputedStyle(jack).width) + "px";
            else
                jack.style.left = parseInt(switcher.currentStyle["width"]) - parseInt(jack.currentStyle["width"]) + "px";
            if (this.options.color)
                this.colorize();
            this.setSpeed()
        } else {
            jack.style.left = 0;
            this.element.checked = false;
            this.switcher.style.boxShadow = "inset 0 0 0 0 " + this.options.secondaryColor;
            this.switcher.style.borderColor = this.options.secondaryColor;
            this.switcher.style.backgroundColor = this.options.secondaryColor !== defaults.secondaryColor ? this.options.secondaryColor : "#fff";
            this.setSpeed()
        }
    }
    ;
    Switchery.prototype.setSpeed = function() {
        var switcherProp = {}
            , jackProp = {
            left: this.options.speed.replace(/[a-z]/, "") / 2 + "s"
        };
        if (this.isChecked()) {
            switcherProp = {
                border: this.options.speed,
                "box-shadow": this.options.speed,
                "background-color": this.options.speed.replace(/[a-z]/, "") * 3 + "s"
            }
        } else {
            switcherProp = {
                border: this.options.speed,
                "box-shadow": this.options.speed
            }
        }
        transitionize(this.switcher, switcherProp);
        transitionize(this.jack, jackProp)
    }
    ;
    Switchery.prototype.colorize = function() {
        this.switcher.style.backgroundColor = this.options.color;
        this.switcher.style.borderColor = this.options.color;
        this.switcher.style.boxShadow = "inset 0 0 0 16px " + this.options.color
    }
    ;
    Switchery.prototype.handleOnchange = function(state) {
        if (typeof Event === "function" || !document.fireEvent) {
            var event = document.createEvent("HTMLEvents");
            event.initEvent("change", true, true);
            this.element.dispatchEvent(event)
        } else {
            this.element.fireEvent("onchange")
        }
    }
    ;
    Switchery.prototype.handleChange = function() {
        var self = this
            , el = this.element;
        if (el.addEventListener) {
            el.addEventListener("change", function() {
                self.setPosition()
            })
        } else {
            el.attachEvent("onchange", function() {
                self.setPosition()
            })
        }
    }
    ;
    Switchery.prototype.handleClick = function() {
        var self = this
            , switcher = this.switcher;
        if (this.isDisabled() === false) {
            fastclick(switcher);
            if (switcher.addEventListener) {
                switcher.addEventListener("click", function() {
                    self.setPosition(true);
                    self.handleOnchange(self.element.checked)
                })
            } else {
                switcher.attachEvent("onclick", function() {
                    self.setPosition(true);
                    self.handleOnchange(self.element.checked)
                })
            }
        } else {
            this.element.disabled = true;
            this.switcher.style.opacity = this.options.disabledOpacity
        }
    }
    ;
    Switchery.prototype.markAsSwitched = function() {
        this.element.setAttribute("data-switchery", true)
    }
    ;
    Switchery.prototype.markedAsSwitched = function() {
        return this.element.getAttribute("data-switchery")
    }
    ;
    Switchery.prototype.init = function() {
        this.hide();
        this.show();
        this.setPosition();
        this.markAsSwitched();
        this.handleChange();
        this.handleClick()
    };

    return Switchery;
});
